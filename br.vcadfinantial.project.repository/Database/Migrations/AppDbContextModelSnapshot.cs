// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using br.vcadfinantial.project.repository.Database;

#nullable disable

namespace br.vcadfinantial.project.repository.Database.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("br.vcadfinantial.project.domain.Entities.Tables.Account", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ID"));

                    b.Property<long>("AccountKey")
                        .HasColumnType("bigint")
                        .HasColumnName("account_key");

                    b.Property<decimal>("Among")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("among");

                    b.Property<int>("IdDocument")
                        .HasColumnType("int")
                        .HasColumnName("id_document");

                    b.HasKey("ID");

                    b.HasIndex("IdDocument");

                    b.ToTable("b_account");
                });

            modelBuilder.Entity("br.vcadfinantial.project.domain.Entities.Tables.Document", b =>
                {
                    b.Property<int>("IdDocument")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_document");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdDocument"));

                    b.Property<bool>("Active")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("active");

                    b.Property<int>("DocumentCode")
                        .HasColumnType("int")
                        .HasColumnName("document_code");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("file_name");

                    b.Property<string>("MounthKey")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("mounth_key");

                    b.Property<string>("OfficialNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("official_number");

                    b.Property<string>("ShipmentType")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("varchar(2)")
                        .HasColumnName("shipment_type");

                    b.HasKey("IdDocument");

                    b.ToTable("b_document");
                });

            modelBuilder.Entity("br.vcadfinantial.project.domain.Entities.Tables.PasswordReset", b =>
                {
                    b.Property<string>("Email")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("email");

                    b.Property<DateTime>("DateExpire")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("date_expire");

                    b.Property<string>("ResetCode")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("reset_code");

                    b.HasKey("Email");

                    b.ToTable("b_password_reset");
                });

            modelBuilder.Entity("br.vcadfinantial.project.domain.Entities.Tables.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("create_date");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("email");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("varchar(80)")
                        .HasColumnName("full_name");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("gender");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("password");

                    b.Property<byte[]>("Photo")
                        .IsRequired()
                        .HasColumnType("MEDIUMBLOB")
                        .HasColumnName("photo");

                    b.HasKey("ID");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("b_user");
                });

            modelBuilder.Entity("br.vcadfinantial.project.domain.Entities.Tables.Account", b =>
                {
                    b.HasOne("br.vcadfinantial.project.domain.Entities.Tables.Document", "Document")
                        .WithMany("Accounts")
                        .HasForeignKey("IdDocument")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Document");
                });

            modelBuilder.Entity("br.vcadfinantial.project.domain.Entities.Tables.Document", b =>
                {
                    b.Navigation("Accounts");
                });
#pragma warning restore 612, 618
        }
    }
}
